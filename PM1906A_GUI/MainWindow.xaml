<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:PM1906A_GUI"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:pgview ="clr-namespace:PM1906A_GUI.PGView"
        xmlns:PM1906AHelperCore="clr-namespace:PM1906AHelper.Core;assembly=PM1906AHelper"
        xmlns:PM1906AHelperCal="clr-namespace:PM1906AHelper.Calibration;assembly=PM1906AHelper"
        xmlns:Converter="clr-namespace:PM1906A_GUI.Converter" 
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" 
        xmlns:dxprg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid"
        xmlns:dxchart="http://schemas.devexpress.com/winfx/2008/xaml/charts"
        x:Class="PM1906A_GUI.MainWindow"
        mc:Ignorable="d" Icon="pm1906a_gui.ico"
        Title="PM1906A Control Panel" Height="600" Width="600" WindowStartupLocation="CenterScreen">
    <Window.Resources>

        <Converter:EnumerateConverter x:Key="EnumerateConverter"/>

        <Converter:ConvertReverseBoolean x:Key="ConvertReverseBoolean"/>

        <pgview:PropertyDefinitionTemplateSelector x:Key="PropertyDefinitionTemplateSelector"/>

        <DataTemplate x:Key="PropertyTemplate">
            <dxprg:PropertyDefinition Path="{Binding Name}" />
        </DataTemplate>
        <DataTemplate x:Key="CollectionTemplate">
            <dxprg:CollectionDefinition Path="{Binding CollectionName}" />
        </DataTemplate>

    </Window.Resources>
    <Grid DataContext="{Binding Source={StaticResource Locator}}" >
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <!-- Measurement display panel -->
        <Grid Background="#FFFF7729">

            <!-- Power Display -->
            <TextBox Grid.Row="1" Text="{Binding Main.CurrentPowerFormatted, Mode=OneWay}" Margin="5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="48" IsReadOnly="True" MaxLines="1" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="White" FontFamily="Arial Rounded MT Bold" FontWeight="ExtraBold"/>

            <!-- Wavelength display -->
            <Border Grid.Row="1"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0" Padding="2" Background="#22000000">
                <TextBlock Text="{Binding Main.CurrentWavelength, StringFormat=\{0\} nm}" Foreground="White"/>
            </Border>

            <!-- Unit List -->
            <Grid HorizontalAlignment="Right" Width="40" Grid.Column="1" VerticalAlignment="Top" Height="80">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0,-2,0,-2"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Agency FB"/>
                        <Setter Property="FontSize" Value="12"/>
                    </Style>

                    <Converter:UnitIndicatorOpacityConverter x:Key="opacityConverter"/>
                </Grid.Resources>
                <TextBlock Text="dBm" 
                           Opacity="{Binding Main.CurrentUnit, ConverterParameter=dBm, Converter={StaticResource opacityConverter}}"/>
                <TextBlock Text="mW" Grid.Row="1" 
                           Opacity="{Binding Main.CurrentUnit, ConverterParameter=W, Converter={StaticResource opacityConverter}}"/>
                <TextBlock Text="mA" Grid.Row="2" 
                           Opacity="{Binding Main.CurrentUnit, ConverterParameter=A, Converter={StaticResource opacityConverter}}"/>
                <TextBlock Text="mV" Grid.Row="3" 
                           Opacity="{Binding Main.CurrentUnit, ConverterParameter=V, Converter={StaticResource opacityConverter}}"/>
            </Grid>

        </Grid>

        <!-- Splitter -->
        <Border Grid.Row="1" Background="#FFFFB255"/>

        <!-- Control Panel -->
        <TabControl Grid.Row="2" TabStripPlacement="Bottom" Background="{x:Null}" BorderBrush="{x:Null}">

            <!-- Manual Operation Tab -->
            <TabItem Header="Manual" Background="{x:Null}" BorderBrush="{x:Null}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80"/>
                        <RowDefinition Height="80"/>
                        <RowDefinition Height="80"/>
                        <RowDefinition Height="80"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <!-- Connection Control -->
                    <GroupBox Header="Connection" Margin="0,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="COM" VerticalAlignment="Center" Margin="0,0,5,0" HorizontalAlignment="Right"/>
                            <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Main.PortNameList}" SelectedItem="{Binding Main.PortName, Delay=10}" IsEnabled="{Binding Main.IsOpened, Converter={StaticResource ConvertReverseBoolean}}" Grid.Column="1">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownOpened">
                                        <i:InvokeCommandAction Command="{Binding Main.RefreshPortCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <TextBlock Text="BaudRate" VerticalAlignment="Center" Margin="10,0,5,0" Grid.Column="2" HorizontalAlignment="Right"/>
                            <TextBox Text="{Binding Main.BaudRate}" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxLines="1" MaxLength="7" IsEnabled="{Binding Main.IsOpened, Converter={StaticResource ConvertReverseBoolean}, Source={StaticResource Locator}}" Grid.Column="3"/>
                            <Button Content="Open" Margin="5,0,0,0" VerticalAlignment="Center" Command="{Binding Main.OpenPMCommand}" IsEnabled="{Binding Main.IsOpened, Converter={StaticResource ConvertReverseBoolean}, Source={StaticResource Locator}}" Grid.Column="4"/>
                            <Button Content="Close" Margin="5,0,0,0" VerticalAlignment="Center" Command="{Binding Main.ClosePMCommand}" IsEnabled="{Binding Main.IsOpened}" Grid.Column="5"/>
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="RANGE" Grid.Row="1" Margin="0,5">
                        <ListBox SelectedValue="{Binding Main.CurrentRange, Delay=20}" SelectedValuePath="Tag" Style="{StaticResource HorizontalRadioButtonList}">
                            <ListBoxItem Tag="{x:Static PM1906AHelperCore:RangeEnum.RANGE1}" Content="R1"/>
                            <ListBoxItem Tag="{x:Static PM1906AHelperCore:RangeEnum.RANGE2}" Content="R2"/>
                            <ListBoxItem Tag="{x:Static PM1906AHelperCore:RangeEnum.RANGE3}" Content="R3"/>
                            <ListBoxItem Tag="{x:Static PM1906AHelperCore:RangeEnum.RANGE4}" Content="R4"/>
                            <ListBoxItem Tag="{x:Static PM1906AHelperCore:RangeEnum.RANGE5}" Content="R5"/>
                            <ListBoxItem Tag="{x:Static PM1906AHelperCore:RangeEnum.RANGE6}" Content="R6"/>
                            <ListBoxItem Tag="{x:Static PM1906AHelperCore:RangeEnum.AUTO}" Content="AUTO"/>
                        </ListBox>
                    </GroupBox>

                    <Grid Grid.Row="2" Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="230"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="UNIT" >
                            <ListBox SelectedValue="{Binding Main.CurrentUnit, Delay=20}" SelectedValuePath="Tag" Style="{StaticResource HorizontalRadioButtonList}">
                                <ListBoxItem Tag="{x:Static PM1906AHelperCore:UnitEnum.dBm}" Content="dBm"/>
                                <ListBoxItem Tag="{x:Static PM1906AHelperCore:UnitEnum.W}" Content="mW"/>
                                <ListBoxItem Tag="{x:Static PM1906AHelperCore:UnitEnum.A}" Content="mA"/>
                                <ListBoxItem Tag="{x:Static PM1906AHelperCore:UnitEnum.V}" Content="mV"/>
                            </ListBox>
                        </GroupBox>
                        <GroupBox Header="Wavelength" Grid.Column="2" Padding="5" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="142*"/>
                                    <ColumnDefinition Width="59*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="txtWavlength" Text="{Binding Main.CurrentWavelength, Mode=OneWay}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,5,0" FontSize="24" MaxLength="4" MaxLines="1"/>
                                <Button Content="SET" Grid.Column="1" Command="{Binding Main.SetWavCommand, Mode=OneWay}" CommandParameter="{Binding Text, ElementName=txtWavlength}" />
                            </Grid>
                        </GroupBox>
                    </Grid>

                    <GroupBox Header="Device Info." Grid.Row="3">
                        <TextBlock Text="{Binding Main.IDN}"/>
                    </GroupBox>

                </Grid>
            </TabItem>

            <TabItem Header="Trigger Source" Background="{x:Null}" BorderBrush="{x:Null}">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="10"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Button Content="Start" Command="{Binding Main.TriggerStartCommand}" />
                        <Button Grid.Column="1" Content="Stop" Command="{Binding Main.TriggerStopCommand}"/>
                        <Button Grid.Column="2" Content="Get Len" Command="{Binding Main.TriggerGetLength}"/>
                        <Button Grid.Column="3" Content="Read Buff" Command="{Binding Main.TriggerReadBuffer}"/>
                    </Grid>
                    <dxchart:ChartControl Grid.Row="1"  DataSource="{Binding Main.ScannedPoints}" >
                        <dxchart:ChartControl.Titles>
                            <dxchart:Title Content="PDL" Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                        </dxchart:ChartControl.Titles>
                        <dxchart:XYDiagram2D>
                            <dxchart:XYDiagram2D.AxisY>
                                <dxchart:AxisY2D>
                                    <dxchart:AxisY2D.Title>
                                        <dxchart:AxisTitle Content="Optical Power"/>
                                    </dxchart:AxisY2D.Title>
                                </dxchart:AxisY2D>
                            </dxchart:XYDiagram2D.AxisY>
                            <dxchart:XYDiagram2D.AxisX>
                                <dxchart:AxisX2D>
                                    <dxchart:AxisX2D.Title>
                                        <dxchart:AxisTitle Content="Index"/>
                                    </dxchart:AxisX2D.Title>
                                </dxchart:AxisX2D>
                            </dxchart:XYDiagram2D.AxisX>
                            <dxchart:LineSeries2D DisplayName="PDL" ArgumentDataMember="X" ValueDataMember="Y">
                            </dxchart:LineSeries2D>
                        </dxchart:XYDiagram2D>
                    </dxchart:ChartControl>
                </Grid>
            </TabItem>

            <!-- Calibration Tab -->
            <TabItem Header="Calibration" BorderBrush="{x:Null}" Background="{x:Null}">
                <TabItem.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="2"/>
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <dxprg:PropertyGridControl
                        HeaderColumnWidth="200"
                        ShowProperties="All"
                        ExpandCategoriesWhenSelectedObjectChanged="True"
                        SelectedObject="{Binding Main.CalibrationHelper}"
                        Margin="0,0,0,10">
                        <dxprg:PropertyGridControl.Resources>
                            <Style TargetType="{x:Type dxprg:CollectionDefinition}">
                                <Setter Property="AllowAddItems" Value="False"/>
                                <Setter Property="AllowNewItemInitializer" Value="False"/>
                                <Setter Property="AllowRemoveItems" Value="False"/>

                            </Style>
                        </dxprg:PropertyGridControl.Resources>

                        <dxprg:PropertyGridControl.PropertyDefinitions>
                            <dxprg:PropertyDefinition Path="ADBackgroundNoise" ShowMenuButton="False"/>
                            <dxprg:CollectionDefinition Path="Res" Type="{x:Type sys:Double[]}">
                                <dxprg:CollectionDefinition.CellTemplate>
                                    <DataTemplate/>
                                </dxprg:CollectionDefinition.CellTemplate>
                                <dxprg:CollectionDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Refresh}" />
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                    <dxb:BarButtonItem Content="Set"  dxb:CollectionAction.Index="0" />
                                </dxprg:CollectionDefinition.MenuCustomizations>
                                <dxprg:PropertyDefinition Path="*." />
                            </dxprg:CollectionDefinition>
                            <dxprg:CollectionDefinition Path="FuncsPerWavelength" Type="{x:Type PM1906AHelperCal:FuncPerWav[]}">
                                <dxprg:CollectionDefinition.CellTemplate>
                                    <DataTemplate/>
                                </dxprg:CollectionDefinition.CellTemplate>
                                <dxprg:PropertyDefinition Path="*.Wavelength" />
                                <dxprg:CollectionDefinition Path="*.Funcs" Type="{x:Type PM1906AHelperCal:FuncPerRange[]}">
                                    <dxprg:PropertyDefinition Path="*.Range" />
                                    <dxprg:PropertyDefinition Path="*.A" />
                                    <dxprg:PropertyDefinition Path="*.B" />
                                    <dxprg:PropertyDefinition Path="*.C" />
                                    <dxprg:PropertyDefinition Path="*.DC" />
                                </dxprg:CollectionDefinition>
                            </dxprg:CollectionDefinition>

                            <dxprg:PropertyDefinition Path="FIR" AllowExpanding="Default">
                                <dxprg:PropertyDefinition.CellTemplate>
                                    <DataTemplate/>
                                </dxprg:PropertyDefinition.CellTemplate>
                            </dxprg:PropertyDefinition>

                        </dxprg:PropertyGridControl.PropertyDefinitions>
                    </dxprg:PropertyGridControl>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="90"/>
                            <ColumnDefinition Width="90"/>
                            <ColumnDefinition Width="90"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="90"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Button Content="1. Default" Grid.Column="0" Command="{Binding Main.LoadDefaultSettingsCommand}" ToolTip="Set the calibration parameters to the default value."/>
                        <Button Content="2. Load Cal." Grid.Column="1" Command="{Binding Main.ImportCalParamsFromJson}" ToolTip="Import calibration parameters from the file."/>
                        <Button Content="3. Write" Grid.Column="2"
                                Command="{Binding Main.SendCalParamsCommand}"
                                CommandParameter="{Binding Main.CalibrationHelper}"
                                ToolTip="Write calibration parameters to the device"/>
                        <Button Content="4. DarkCurrent" Grid.Column="3" Command="{Binding Main.AutoTestDarkCurrentCommand}" ToolTip="Auto-test the dark-current."/>

                        <Button Content="5. Flash" Grid.Column="4" 
                                ToolTip="Save the calibration settings to the flash"
                                Command="{Binding Main.SaveCalParamToFlashCommand}" Foreground="Red" FontWeight="Bold" FontSize="16"/>
                    </Grid>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <Button Content="Save Cal. To File" Grid.Column="0" Command="{Binding Main.ExportCalParamsToJsonCommand}" ToolTip="Export and save calibration parameters to a file."/>
                        <Button Content="Write FIR Coeff." Grid.Column="1" Command="{Binding Main.LoadFIRCoefficientCommand}" ToolTip="Load FIR coefficients from file and write to the device."/>
                        <Button Content="Read Cal. Param" Grid.Column="2" 
                                Command="{Binding Main.ReloadCalParamsCommand}"
                                ToolTip="Read calibration parameters from the device"/>

                    </Grid>
                </Grid>
            </TabItem>

        </TabControl>

    </Grid>
</Window>
