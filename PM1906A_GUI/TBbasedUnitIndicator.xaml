<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PM1906A_GUI" xmlns:Custom="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <ControlTemplate x:Key="TBbasedUnitIndicator" TargetType="{x:Type ButtonBase}">
        <Custom:ButtonChrome x:Name="PART_Owner" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" EnableContentPresenterLogic="False" Owner="{x:Null}" RenderContent="{x:Null}" RenderTemplateSelector="{Custom:RenderTemplateSelector}" dx:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Buttons.xaml;247;10">
            <Custom:ButtonChrome.RenderTemplate>
                <Custom:RenderTemplate>
                    <Custom:RenderTemplate.Triggers>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="dx:SimpleButton.Glyph" Property="Glyph" SourceName="{x:Null}" TargetProperty="Source" TargetName="Image" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="dx:SimpleButton.GlyphAlignment" Property="GlyphAlignment" SourceName="{x:Null}" TargetProperty="Dock" TargetName="Image" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="dx:SimpleButton.GlyphToContentOffset" Property="GlyphToContentOffset" SourceName="{x:Null}" TargetProperty="Width" TargetName="Border" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="dx:SimpleButton.GlyphToContentOffset" Property="GlyphToContentOffset" SourceName="{x:Null}" TargetProperty="Height" TargetName="Border" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="ContentControl.Content" Property="Content" SourceName="{x:Null}" TargetProperty="{x:Null}" TargetName="ContentPresenter" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="ContentControl.ContentTemplate" Property="ContentTemplate" SourceName="{x:Null}" TargetProperty="{x:Null}" TargetName="ContentPresenter" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="ContentControl.ContentTemplateSelector" Property="ContentTemplateSelector" SourceName="{x:Null}" TargetProperty="{x:Null}" TargetName="ContentPresenter" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="Control.VerticalContentAlignment" Property="VerticalContentAlignment" SourceName="{x:Null}" TargetProperty="VerticalAlignment" TargetName="ContentPresenter" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="Control.HorizontalContentAlignment" Property="HorizontalContentAlignment" SourceName="{x:Null}" TargetProperty="HorizontalAlignment" TargetName="ContentPresenter" ValueSource="TemplatedParent"/>
                        <Custom:RenderBinding Converter="{x:Null}" ConverterParamenter="{x:Null}" DependencyProperty="Control.Padding" Property="Padding" SourceName="{x:Null}" TargetProperty="Margin" TargetName="RenderPanel" ValueSource="TemplatedParent"/>
                        <Custom:RenderTrigger DependencyProperty="dx:SimpleButton.GlyphAlignment" Property="GlyphAlignment" SourceName="{x:Null}" TargetName="{x:Null}" Value="Left" ValueSource="TemplatedParent">
                            <Custom:RenderSetter Property="Dock" TargetName="Image" Value="Left"/>
                            <Custom:RenderSetter Property="Dock" TargetName="Border" Value="Left"/>
                            <Custom:RenderSetter Property="Dock" TargetName="ContentPresenter" Value="Right"/>
                        </Custom:RenderTrigger>
                        <Custom:RenderTrigger DependencyProperty="dx:SimpleButton.GlyphAlignment" Property="GlyphAlignment" SourceName="{x:Null}" TargetName="{x:Null}" Value="Right" ValueSource="TemplatedParent">
                            <Custom:RenderSetter Property="Dock" TargetName="Image" Value="Right"/>
                            <Custom:RenderSetter Property="Dock" TargetName="Border" Value="Right"/>
                            <Custom:RenderSetter Property="Dock" TargetName="ContentPresenter" Value="Left"/>
                        </Custom:RenderTrigger>
                        <Custom:RenderTrigger DependencyProperty="dx:SimpleButton.GlyphAlignment" Property="GlyphAlignment" SourceName="{x:Null}" TargetName="{x:Null}" Value="Top" ValueSource="TemplatedParent">
                            <Custom:RenderSetter Property="Dock" TargetName="Image" Value="Top"/>
                            <Custom:RenderSetter Property="Dock" TargetName="Border" Value="Top"/>
                            <Custom:RenderSetter Property="Dock" TargetName="ContentPresenter" Value="Bottom"/>
                        </Custom:RenderTrigger>
                        <Custom:RenderTrigger DependencyProperty="dx:SimpleButton.GlyphAlignment" Property="GlyphAlignment" SourceName="{x:Null}" TargetName="{x:Null}" Value="Bottom" ValueSource="TemplatedParent">
                            <Custom:RenderSetter Property="Dock" TargetName="Image" Value="Bottom"/>
                            <Custom:RenderSetter Property="Dock" TargetName="Border" Value="Bottom"/>
                            <Custom:RenderSetter Property="Dock" TargetName="ContentPresenter" Value="Top"/>
                        </Custom:RenderTrigger>
                        <Custom:MultiRenderTrigger>
                            <Custom:MultiRenderTrigger.Conditions>
                                <Custom:RenderConditionGroup Operator="Or">
                                    <Custom:RenderCondition DependencyProperty="dx:SimpleButton.Glyph" FallbackIsValid="False" Property="Glyph" SourceName="{x:Null}" TargetName="{x:Null}" Value="{x:Null}" ValueSource="TemplatedParent"/>
                                    <Custom:RenderCondition DependencyProperty="ContentControl.Content" FallbackIsValid="False" Property="Content" SourceName="{x:Null}" TargetName="{x:Null}" Value="{x:Null}" ValueSource="TemplatedParent"/>
                                </Custom:RenderConditionGroup>
                            </Custom:MultiRenderTrigger.Conditions>
                            <Custom:RenderSetter Property="Visibility" TargetName="Border" Value="Collapsed"/>
                        </Custom:MultiRenderTrigger>
                    </Custom:RenderTemplate.Triggers>
                    <Custom:RenderPanel ClipToBounds="False" ContentSpecificClipToBounds="False" Dock="{x:Null}" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" LayoutProvider="{Custom:GridPanelLayoutProvider}" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="e2fcf17a-17ec-4857-b89d-85a21fd4b044" Opacity="1" ShouldCalcDpiAwareThickness="True" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Buttons.xaml;189;10" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Stretch" Width="NaN">
                        <Custom:RenderButtonBorder ClipToBounds="False" ContentSpecificClipToBounds="False" Dock="{x:Null}" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="GlyphAndContentBorder" Opacity="1" Placement="{x:Null}" RenderTemplateSelector="{x:Null}" ShouldCalcDpiAwareThickness="True" ShowBounds="False" ThemeInfo="{x:Null}" UsePropagatedIsMouseOver="False" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Stretch" Width="NaN">
                            <Custom:RenderButtonBorder.RenderTemplate>
                                <Custom:RenderTemplate>
                                    <Custom:RenderTemplate.Triggers>
                                        <Custom:RenderTrigger DependencyProperty="dx:ThemeManager.IsTouchEnabled" Property="IsTouchEnabled" SourceName="{x:Null}" TargetName="{x:Null}" Value="True" ValueSource="TemplatedParent">
                                            <Custom:RenderSetter Property="MinHeight" TargetName="Outer" Value="44"/>
                                        </Custom:RenderTrigger>
                                        <Custom:RenderStateGroup Name="FocusStates">
                                            <Custom:RenderStateTrigger Name="Unfocused">
                                                <Custom:RenderSetter Property="Visibility" TargetName="Focused">
                                                    <Custom:RenderSetter.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </Custom:RenderSetter.Value>
                                                </Custom:RenderSetter>
                                            </Custom:RenderStateTrigger>
                                            <Custom:RenderStateTrigger Name="Focused">
                                                <Custom:RenderSetter Property="Visibility" TargetName="Focused">
                                                    <Custom:RenderSetter.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </Custom:RenderSetter.Value>
                                                </Custom:RenderSetter>
                                            </Custom:RenderStateTrigger>
                                        </Custom:RenderStateGroup>
                                        <Custom:RenderStateGroup Name="VisualStates">
                                            <Custom:RenderStateTrigger Name="Normal"/>
                                            <Custom:RenderStateTrigger Name="MouseOver">
                                                <Custom:RenderSetter Property="BorderBrush" TargetName="Outer">
                                                    <Custom:RenderSetter.Value>
                                                        <SolidColorBrush Color="#FF7EB4EA"/>
                                                    </Custom:RenderSetter.Value>
                                                </Custom:RenderSetter>
                                                <Custom:RenderSetter Property="Background" TargetName="Outer">
                                                    <Custom:RenderSetter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Custom:RenderSetter.Value>
                                                </Custom:RenderSetter>
                                            </Custom:RenderStateTrigger>
                                            <Custom:RenderStateTrigger Name="Pressed">
                                                <Custom:RenderSetter Property="BorderBrush" TargetName="Outer">
                                                    <Custom:RenderSetter.Value>
                                                        <SolidColorBrush Color="#FF569DE5"/>
                                                    </Custom:RenderSetter.Value>
                                                </Custom:RenderSetter>
                                                <Custom:RenderSetter Property="Background" TargetName="Outer">
                                                    <Custom:RenderSetter.Value>
                                                        <SolidColorBrush Color="#19000000"/>
                                                    </Custom:RenderSetter.Value>
                                                </Custom:RenderSetter>
                                            </Custom:RenderStateTrigger>
                                            <Custom:RenderStateTrigger Name="Checked">
                                                <Custom:RenderSetter Property="BorderBrush" TargetName="Outer">
                                                    <Custom:RenderSetter.Value>
                                                        <SolidColorBrush Color="#FF569DE5"/>
                                                    </Custom:RenderSetter.Value>
                                                </Custom:RenderSetter>
                                                <Custom:RenderSetter Property="Background" TargetName="Outer">
                                                    <Custom:RenderSetter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Custom:RenderSetter.Value>
                                                </Custom:RenderSetter>
                                            </Custom:RenderStateTrigger>
                                        </Custom:RenderStateGroup>
                                        <Custom:RenderStateGroup Name="PlacementStates">
                                            <Custom:RenderStateTrigger Name="Default"/>
                                            <Custom:RenderStateTrigger Name="Left">
                                                <Custom:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,0,1"/>
                                                <Custom:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,0,1"/>
                                            </Custom:RenderStateTrigger>
                                            <Custom:RenderStateTrigger Name="Right">
                                                <Custom:RenderSetter Property="BorderThickness" TargetName="Focused" Value="0,1,1,1"/>
                                            </Custom:RenderStateTrigger>
                                            <Custom:RenderStateTrigger Name="Top">
                                                <Custom:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,1,0"/>
                                                <Custom:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,1,0"/>
                                            </Custom:RenderStateTrigger>
                                            <Custom:RenderStateTrigger Name="Bottom">
                                                <Custom:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,0,1,1"/>
                                            </Custom:RenderStateTrigger>
                                        </Custom:RenderStateGroup>
                                    </Custom:RenderTemplate.Triggers>
                                    <Custom:RenderPanel ClipToBounds="False" ContentSpecificClipToBounds="False" Dock="{x:Null}" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" LayoutProvider="{Custom:GridPanelLayoutProvider}" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="5cd29a8e-f2bd-41f2-b2e8-7a15260238e6" Opacity="1" ShouldCalcDpiAwareThickness="True" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Office2016White\Buttons.xaml;17;10" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Stretch" Width="NaN">
                                        <Custom:RenderBorder BorderBrush="#7F5D5D5D" BorderThickness="1" ClipToBounds="False" ContentSpecificClipToBounds="False" Child="{x:Null}" CornerRadius="0" Dock="{x:Null}" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="Outer" Opacity="1" Padding="0" ShouldCalcDpiAwareThickness="True" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Office2016White\Buttons.xaml;18;14" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Stretch" Width="NaN">
                                            <Custom:RenderBorder.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Custom:RenderBorder.Background>
                                        </Custom:RenderBorder>
                                        <Custom:RenderBorder BorderBrush="#FF0072C6" BorderThickness="1" Background="{x:Null}" ClipToBounds="False" ContentSpecificClipToBounds="False" Child="{x:Null}" CornerRadius="0" Dock="{x:Null}" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="Focused" Opacity="1" Padding="0" ShouldCalcDpiAwareThickness="True" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Office2016White\Buttons.xaml;19;14" UseLayoutRounding="{x:Null}" Visibility="Collapsed" VerticalAlignment="Stretch" Width="NaN"/>
                                    </Custom:RenderPanel>
                                </Custom:RenderTemplate>
                            </Custom:RenderButtonBorder.RenderTemplate>
                        </Custom:RenderButtonBorder>
                        <Custom:RenderPanel ClipToBounds="False" ContentSpecificClipToBounds="False" Dock="{x:Null}" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" LayoutProvider="{Custom:GridPanelLayoutProvider}" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="RenderPanel" Opacity="1" ShouldCalcDpiAwareThickness="False" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Buttons.xaml;191;14" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Stretch" Width="NaN">
                            <Custom:RenderPanel ClipToBounds="False" ContentSpecificClipToBounds="False" Dock="{x:Null}" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" LayoutProvider="{Custom:DockPanelLayoutProvider LastChildFill=True}" MaxWidth="Infinity" MaxHeight="Infinity" Margin="1" MinWidth="0" MinHeight="0" Name="356d7090-39b2-44c5-8855-0e3395865d25" Opacity="1" ShouldCalcDpiAwareThickness="True" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Buttons.xaml;192;18" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Stretch" Width="NaN">
                                <Custom:RenderImage ClipToBounds="False" ContentSpecificClipToBounds="False" Dock="Left" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Center" Height="NaN" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="Image" Opacity="1" ShouldCalcDpiAwareThickness="True" Source="{x:Null}" Stretch="Uniform" StretchDirection="DownOnly" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Buttons.xaml;193;22" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Center" Width="NaN"/>
                                <Custom:RenderBorder BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" ClipToBounds="False" ContentSpecificClipToBounds="False" Child="{x:Null}" CornerRadius="0" Dock="Left" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="Border" Opacity="1" Padding="0" ShouldCalcDpiAwareThickness="True" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Buttons.xaml;194;22" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Stretch" Width="NaN"/>
                                <Custom:RenderContentPresenter AllowVisualTree="True" ClipToBounds="False" ContentSpecificClipToBounds="False" Child="{x:Null}" Dock="{x:Null}" Foreground="{x:Null}" FlowDirection="{x:Null}" HorizontalAlignment="Stretch" Height="NaN" MaxWidth="Infinity" MaxHeight="Infinity" Margin="0" MinWidth="0" MinHeight="0" Name="ContentPresenter" Opacity="1" PreferRenderTemplate="True" ShouldCalcDpiAwareThickness="True" ShowBounds="False" ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Buttons.xaml;195;22" UseLayoutRounding="{x:Null}" Visibility="Visible" VerticalAlignment="Stretch" Width="NaN"/>
                            </Custom:RenderPanel>
                        </Custom:RenderPanel>
                    </Custom:RenderPanel>
                </Custom:RenderTemplate>
            </Custom:ButtonChrome.RenderTemplate>
        </Custom:ButtonChrome>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="PART_Owner" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>